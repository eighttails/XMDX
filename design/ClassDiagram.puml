@startuml
skinparam linetype ortho

Package QtRemoteObjects{
  class QMDXPlayerReplica{
  }
  class QMDXPlayerSource{
  }
  class PlaylistManagerReplica{
  }
  class PlaylistManagerSource{
  }
}


Package AndroidService{
  class QMDXPlayer{
    ..PROPERTY..
    + QString title;
    + QString fileName;
    + float duration;
    + QString durationString;
    + float currentPosition;
    + QString currentPositionString;
    + bool isPlaying;
    + bool isSongLoaded;
    ..SIGNALS..
    + isPlayingChanged(bool isPlaying);
    + isSongLoadedChanged(bool isSongLoaded);
    + titleChanged(QString title);
    + fileNameChanged(QString fileName);
    + durationChanged(float duration);
    + durationStringChanged(QString duration);
    + currentPositionChanged(float currentPosition);
    + currentPositionStringChanged(QString currentPosition);
    + songPlayFinished();
    ..SLOTS..
    + bool loadSong(bool renderWav,
            const QString& fileName,
            const QString& pdxPath,
            unsigned loops,
            bool enableFadeout);
    + bool startPlay();
    + bool stopPlay();
    + bool setCurrentPosition(float position);
    + bool stepForward();
    + bool stepBackward();
    + bool playFileByIndex();
  }
  class QMDXPlayerServiceProxy{
    ..SLOTS..
    + bool loadSong(bool renderWav,
      const QString &fileName,
      const QString &pdxPath,
      unsigned loops,
      bool enableFadeout) override;
  	+ bool startPlay() override;
  	+ bool stopPlay() override;
  	+ bool setCurrentPosition(float position) override;
    + bool stepForward();
    + bool stepBackward();
    + bool playFileByIndex();
  }
  QMDXPlayerSource<|-QMDXPlayerServiceProxy
  QMDXPlayerServiceProxy"1" *-> "1" QMDXPlayer

  class PlaylistManagerServiceProxy{
    ..SLOTS..
    + void clearPlaylist();
    + bool loadPlaylist(const QString& playlistName);
    + bool savePlaylist(const QString& playlistName);
    + bool loadDefaultPlaylist();
    + bool saveDefaultPlaylist();
    + bool addFile(const QString& mdxFile);
    + bool addFolder(const QString& addPath, bool isTopFolder = true);
  }
  PlaylistManagerSource<|-PlaylistManagerServiceProxy

  class PlaylistManager{
    + bool addFileDialog();
    + bool addFolderDialog();
    + QString next(bool random, bool loop);
    + QString previous(bool random, bool loop);
    ..PROPERTY..
    + int currentIndex;
    ..SIGNALS..
    + void playlistChanged(QByteArray playlist)
    ..SLOTS..
    + void clearPlaylist();
    + bool loadPlaylist(const QString& playlistName);
    + bool savePlaylist(const QString& playlistName);
    + bool loadDefaultPlaylist();
    + bool saveDefaultPlaylist();
    + bool addFile(const QString& mdxFile);
    + bool addFolder(const QString& addPath, bool isTopFolder = true);
  }
  PlaylistManagerServiceProxy*->PlaylistManager

  QMDXPlayer->PlaylistManager
  note as PlaylistNote
  曲送り、曲戻し時にQMDXPlayerから
  プレイリストを参照する
  end note
  PlaylistManager.PlaylistNote

  class MXDRV
  QMDXPlayer"*".>"1" MXDRV

  class PlayerService{
    ..SLOTS..
    + void SetNotification(QString notify);
  }

  PlayerService*->QMDXPlayerServiceProxy
  PlayerService*->PlaylistManagerServiceProxy
}

package AndroidActivity{

  class QMDXPlayerClientProxy {
    ..PROPERTY..
    + QString title;
    + QString fileName;
    + float duration;
    + QString durationString;
    + float currentPosition;
    + QString currentPositionString;
    + bool isPlaying;
    + bool isSongLoaded;

    ..SLOTS..
    + float currentPosition() override;
    + QString currentPositionString() override;
    + bool isPlaying() override;
    + bool stepForward();
    + bool stepBackward();
    + bool playFileByIndex(int index);

    ..PROTECTED SLOTS..
  	# void setTitle(QString title);
  	# void setFileName(QString fileName);
  	# void setDuration(float duration);
  	# void setCurrentPositionInternal(float currentPosition);
  	# void setCurrentPositionString(QString currentPositionString);
  	# void setIsPlaying(bool isPlaying);
  	# void setIsSongLoaded(bool isSongLoaded);
  }
  note as ClientProxyNote
  GUIからプレーヤーへの要求を
  サービスに移譲するためのクラス
  Androidの場合に使用する。
  end note
  QMDXPlayerClientProxy . ClientProxyNote
  PlaylistManagerClientProxy . ClientProxyNote
  QMDXPlayer<|-QMDXPlayerClientProxy
  PlaylistManager<|-PlaylistManagerClientProxy
  class PlaylistManagerClientProxy{
    ..SLOTS..
    + void clearPlaylist();
    + bool loadPlaylist(const QString& playlistName);
    + bool savePlaylist(const QString& playlistName);
    + bool loadDefaultPlaylist();
    + bool saveDefaultPlaylist();
    + bool addFile(const QString& mdxFile);
    + bool addFolder(const QString& addPath, bool isTopFolder = true);
    ..PROTECTED SLOTS..
    # bool setPlaylist(QByteArray playlist);
  }

  class RootContext<<QML>>
}

PlaylistManagerClientProxy"1"*->"1"PlaylistManagerReplica
QMDXPlayerClientProxy"1"*->"1"QMDXPlayerReplica
QMDXPlayerClientProxy"1"*->"1"RootContext

QMDXPlayer.>QSettings

@enduml
